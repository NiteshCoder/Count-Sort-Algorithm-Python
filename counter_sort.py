#Count Sort 
'''
- One of the fastest sorting algorithm for sorting elements.

- Step 1 : Find the maximum 
- Step 2 : Make new array with size = maximum
- Step 3 : Initialise new array element with 0.
- Step 4 : Go to Original Array. 
- Step 5 : As per Original Array value put 1 or 0 in new array
- Step 6 : Fetch the elements from new array one by one As per index.

-Example :
	
- Original_ = 3 1 9 7 1 2 4
- Max_Value = 9
- new array = 0 0 0 0 0 0 0 0 0

------------------------------------------------------------
- Original[0] = 3 // so put new array[3] = 1
- Original[1] = 1 // so put new array[1] = 1
- Original[2] = 9 // so put new array[9] = 1
- Original[3] = 7 // so put new array[7] = 1
- Original[4] = 1 // so put new array[1] = 2 // we got 1 two time that's Why we Increment.
- Original[5] = 2 // so put new array[2] = 1
- Original[6] = 4 // so put new array[4] = 1

--------------------------------------------------------------
- Now new array = 0 2 1 1 1 0 0 1 0 1
---------------------------------------------------------------
- Sorting.
- Fetch values from new_array if 2 then we will get two same values.
- if 1 then simply put its index.
- If 0 nothing to do just go ahed.

THANK YOU.

'''

#To find maximum element from data
def max_element(data):
	max = data[0]
	for i in range(len(data)):
		if max < data[i]:
			max = data[i]
	return max;
	
	
def count_sort(data):
	m = max_element(data) #Getting maximum element
	n = len(data) #Length of data
	
	new_list = [] #For storing 0's and 1's as per occured values.
	
	#To fill all the elements with 0.
	for i in range(m+1):
		new_list.append(0)
	print(f"\n------------------INITIALISING new_list With 0's---------------------\n{ new_list }")
	
	#To put 1 and more as per data values to particular new_list index as per value.
	for j in range(n):
		new_list[data[j]] += 1 
					
	print(f"\n------------------INITIALISED new_list As per Data values---------------------\n{ new_list }")
	
	i = 0
	j = 0
	#For fetching valus as per new_list and put to data which one automatically sorted by above codes.
	while i<=m:
		if new_list[i] > 0:
			data[j] = i
			new_list[i] -= 1
			j+=1
		else:
			i+=1
	print(f"\n------------------SORTED DATA---------------------\n{ data }")
	
			
			
if __name__ == "__main__":
	data = []
	size = int(input("How many elements you want to enter ? : "))
	
	print("\n------------------INITIALISING--------------------")
	for i in range(size):
		temp = int(input(f"Enter element { i + 1 } : "))
		data.append(temp)
		
	print(f"\n-----------------DATA------------------------")
	print(data)
	count_sort(data)
	
	
#Generated By Niteshkumar Prajapati/